---

- hosts: "mcs1"
  name: "Installing MariaDB Software"
  become: true
  become_user: root
  vars_files:
    # yamllint disable-line rule:line-length
    - '../inventory/group_vars/distro/{{ ansible_distribution|lower }}{{ ansible_distribution_major_version }}.yml'

  tasks:

    - name: "Getting MariaDB Enterprise Repo Setup Script"
      ansible.builtin.get_url:
        # yamllint disable-line rule:line-length
        url: https://dlm.mariadb.com/enterprise-release-helpers/mariadb_es_repo_setup
        dest: /usr/local/bin/mariadb_es_repo_setup
        mode: 'a+x'

    - name: "Adding MariaDB Enterprise Repo Script Dependency"
      ansible.builtin.apt:
        name: apt-transport-https
        state: present
      when: ansible_distribution | lower == 'ubuntu'

    - name: "Setting Up MariaDB Enterprise Repo"
      # yamllint disable-line rule:line-length
      ansible.builtin.command: /usr/local/bin/mariadb_es_repo_setup --token={{ enterprise_token }} --mariadb-server-version='{{ mariadb_version }}' --mariadb-maxscale-version='{{ maxscale_version }}' --apply
      register: my_output
      changed_when: my_output.rc != 0

    - name: "Installing MariaDB Items"
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
        update_cache: true
      with_items:
        - '{{ mariadb_client }}'
        - '{{ mariadb_server }}'
        - '{{ mariadb_columnstore }}'
        - '{{ maxscale }}'

    - name: "Configuring Bind Address"
      ansible.builtin.replace:
        path: '{{ server_cnf }}'
        regexp: '^bind-address'
        replace: '#bind-address'

    - name: "Setting Server IDs"
      ansible.builtin.replace:
        path: '{{ columnstore_cnf }}'
        regexp: '^.*server.id.*$'
        replace: "server_id = {{ inventory_hostname.split('s')[-1] }}"

    - name: "Configuring columnstore.cnf"
      ansible.builtin.blockinfile:
        path: '{{ columnstore_cnf }}'
        block: |
          character_set_server = utf8
          collation_server = utf8_general_ci
          columnstore_use_import_for_batchinsert=ON
          gtid_strict_mode = ON
          ignore_db_dirs = .pki
          innodb_buffer_pool_size = 10G
          log_bin = /var/log/mariadb/mariadb-bin
          log_bin_index = /var/log/mariadb/mariadb-bin.index
          log_error = /var/log/mariadb/mariadb-error.log
          log_slave_updates = ON
          lower_case_table_names = 1
          port = {{ mariadb_port }}
          relay_log = /var/log/mariadb/mariadb-relay
          relay_log_index = /var/log/mariadb/mariadb-relay.index

    - name: "Verify Ownership Of Log Folder"
      ansible.builtin.file:
        path: /var/log/mariadb
        state: directory
        owner: mysql
        group: mysql
        mode: '0755'

    - name: "Setting PAM Limits"
      community.general.pam_limits:
        domain: mysql
        limit_type: '-'
        limit_item: nproc
        value: 63069

    - name: "Enabling MariaDB Server"
      ansible.builtin.systemd:
        name: mariadb
        state: restarted
        enabled: true

    - name: "Stopping Columnstore Engine"
      ansible.builtin.systemd:
        name: mariadb-columnstore
        state: stopped
        enabled: false

    - name: "Installing CMAPI Server"
      ansible.builtin.package:
        name: '{{ item }}'
        state: present
        update_cache: true
      with_items:
        - '{{ mariadb_columnstore_cmapi }}'

    - name: "Enabling CMAPI Server"
      ansible.builtin.systemd:
        name: mariadb-columnstore-cmapi
        state: started
        enabled: true

    - name: "Enabling MaxScale"
      ansible.builtin.systemd:
        name: maxscale
        state: started
        enabled: true
